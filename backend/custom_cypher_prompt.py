from langchain.prompts import PromptTemplate

CUSTOM_CYPHER_PROMPT = PromptTemplate(
    input_variables=["question", "schema"],
    template=(
        "You are a professional Cypher query generator for Neo4j.\n"
        "Translate the question into a valid Cypher query.\n"
        "Do not include `Cypher:`, `Response:`, code blocks (```), or any tags like <think>.\n"
        "Just return the raw Cypher query starting from Cypher keywords.\n"
        "If the organization is a Company, use the Leadership node and ON_EXEC_TEAM_OF or ON_BOARD_OF\n"
        "If the organization is a VC, use the Employee node and WORKS_AT.\n"
        "\n"
        "Example 1:\n"
        "Schema:\n(:VC)\n"
        "Question:\nHow many VC nodes are there?\n"
        "Cypher:\nMATCH (v:VC) RETURN count(v)\n\n"
        "Example 2:\n"
        "Schema:\n(:VC)-[:OPERATES]->(:Fund)\n"
        "Question:\nWhat are the names of all funds operated by the VC named Accel?\n"
        "Cypher:\nMATCH (v:VC {{VC_Name: \"Accel\"}})-[:OPERATES]->(f:Fund) RETURN f.Fund_Name\n\n"
        "Example 3:\n"
        "Schema:\n(:Employee)-[:WORKS_AT]->(:VC)\n"
        "Question:\nWho are the employees working at each VC, and what are their roles?\n"
        "Cypher:\nMATCH (e:Employee)-[:WORKS_AT]->(v:VC) RETURN v.VC_Name, e.Employee_Name, e.Role\n\n"
        "Example 4:\n"
        "Schema:\n(:Fund)\n"
        "Question:\nWhich funds have a Net IRR greater than 20%?\n"
        "Cypher:\nMATCH (f:Fund) WHERE f.Net_IRR_Percent> 20 RETURN f.Fund_Name, f.Net_IRR_Percent\n\n"
        "Example 4a:\n"
        "Schema:\n(:Fund)\n"
        "Question:\nWhich funds are oversubscribed?\n"
        "Cypher:\nMATCH (f:Fund) WHERE f.Closed_Size_mn > f.Target_Size_mn RETURN f.Fund_Name\n\n"
        "Example 5:\n"
        "Schema:\n(:VC)-[:INVESTED_IN]->(:Company)\n"
        "Question:\nWhat companies has the VC named Sequoia Capital invested in?\n"
        "Cypher:\nMATCH (v:VC {{VC_Name: \"Sequoia Capital\"}})-[:INVESTED_IN]->(c:Company) RETURN c.Company_Name\n\n"
        "Example 6:\n"
        "Schema:\n(:Investor)-[:INVESTED_IN]->(:VC)\n"
        "Question:\nWhich investors have invested in more than one VC?\n"
        "Cypher:\nMATCH (i:Investor)-[:INVESTED_IN]->(v:VC) WITH i, count(DISTINCT v) AS vcCount WHERE vcCount > 1 RETURN i.Investor_Name, vcCount\n\n"
        "Example 7:\n"
        "Schema:\n(:Leadership)-[:ON_BOARD_OF]->(:Company)\n"
        "Question:\nWho are the board members of the company \"Stripe\"?\n"
        "Cypher:\nMATCH (l:Leadership)-[:ON_BOARD_OF]->(c:Company {{Company_Name: \"Stripe\"}}) RETURN l.Person_Name, l.Role\n\n"
        "Example 8:\n"
        "Schema:\n(:Leadership)-[:ON_EXEC_TEAM_OF]->(:Company)\n"
        "Question:\nWhich companies have more than one executive team member?\n"
        "Cypher:\nMATCH (l:Leadership)-[:ON_EXEC_TEAM_OF]->(c:Company) WITH c, count(DISTINCT l.Person_ID) AS execCount WHERE execCount > 1 RETURN c.Company_Name, execCount\n\n"
        "Example 9:\n"
        "Schema:\n(:Fund)\n"
        "Question:\nList all funds targeting \"North America\" and focused on the \"Healthcare\" industry.\n"
        "Cypher:\nMATCH (f:Fund) WHERE f.`Primary_Region_Focus` = \"North America\" AND f.`Core_Industries` CONTAINS \"Healthcare\" RETURN f.Fund_Name, f.`Primary_Region_Focus`, f.`Core_Industries`\n\n"
        "Example 10:\n"
        "Schema:\n(:Employee)-[:WORKS_AT]->(:VC)\n"
        "Question:\nWhat is John Smith's role at Sequoia Capital?\n"
        "Cypher:\nMATCH (e:Employee {{Employee_Name: \"John Smith\"}})-[:WORKS_AT]->(v:VC {{VC_Name: \"Sequoia Capital\"}}) RETURN e.Role\n\n"
        "Example 11: \n"
        "Schema:\n(:Leadership)-[:ON_EXEC_TEAM_OF]->(:Company)\n(:Leadership)-[:ON_BOARD_OF]->(:Company)\n"
        "Question:\nWhat roles does Jane Doe have at Stripe?\n"
        "Cypher:\nMATCH (l:Leadership {{Person_Name: \"Jane Doe\"}})-[:ON_EXEC_TEAM_OF|ON_BOARD_OF]->(c:Company {{Company_Name: \"Stripe\"}}) RETURN DISTINCT l.Role\n\n"
        "Example 12: \n" 
        "Schema:\n(:Leadership)-[:ON_EXEC_TEAM_OF]->(:Company)\n(:Leadership)-[:ON_BOARD_OF]->(:Company)\n"
        "Question:\nWho is CFO at Xoom?\n"
        "Cypher:\nMATCH (l:Leadership)-[:ON_EXEC_TEAM_OF|ON_BOARD_OF]->(c:Company {{Company_Name: \"Xoom\"}}) WHERE l.Role = \"CFO\" RETURN l.Person_Name\n\n"
        "Example 13: \n"
        "Schema:\n(:Employee)-[:WORKS_AT]->(:VC)\n"
        "Question:\nWho is the CFO at Sequoia Capital?\n"
        "Cypher:\nMATCH (e:Employee)-[:WORKS_AT]->(v:VC {{VC_Name: \"Sequoia Capital\"}}) WHERE e.Role = \"CFO\" RETURN e.Employee_Name\n\n"     
        "Example 14:\n" 
        "Schema:\n(:Employee)-[:WORKS_AT]->(:VC)\n"
        "Question:\nList of people with role of Seed/Early at Sequoia Capital VC\n"
        "Cypher:\nMATCH (e:Employee)-[:WORKS_AT]->(v:VC {{VC_Name: \"Sequoia Capital\"}}) WHERE e.Role = \"Seed/Early\" RETURN e.Employee_Name \n\n"
        "Example 15:\n"
        "Schema:\n(:Investor)-[:INVESTED_IN]->(:VC)\n"
        "Question:\n What are the common investors between Sequoia Capital VC and BVP VC?\n"
        "Cypher:\nMATCH (i:Investor)-[:INVESTED_IN]->(v1:VC {{VC_Name: \"Sequoia Capital\"}}) MATCH (i)-[:INVESTED_IN]->(v2:VC {{VC_Name: \"BVP\"}}) RETURN i.Investor_Name \n\n"
        "Now generate the query:\n"
        "Schema:\n{schema}\n"
        "Question:\n{question}"
    )
) 